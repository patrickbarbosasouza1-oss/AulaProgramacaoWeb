// =======================================================
// 1. Vari치veis Globais e Estrutura de Rotas (SPA B치sico)
// =======================================================

// AGORA APONTA APENAS PARA O NOME DO ARQUIVO (J츼 QUE A URL ATUAL J츼 EST츼 NA PASTA HTML)
const routes = {
    '': 'index.html', // Chave vazia para rota raiz (/)
    'index.html': 'index.html',
    'projeto.html': 'projeto.html',
    'cadastro.html': 'cadastro.html',
};
// =======================================================
// 2. Templates JavaScript (Simples para Exemplo)
// =======================================================

// Template de Exemplo: Mensagem de Sucesso ap칩s Cadastro
const templateFeedbackSucesso = (nome) => `
    <div class="alert alert-success">
        <h3 style="color: var(--cor-sucesso);">游꿀 Cadastro Conclu칤do com Sucesso!</h3>
        <p>Obrigado, ${nome}! Seu interesse em ser volunt치rio na ONG Patas Amigas foi registrado.</p>
        <p>Entraremos em contato em breve atrav칠s do seu e-mail para os pr칩ximos passos.</p>
    </div>
`;

// =======================================================
// 3. Fun칞칫es de Utilit치rios (M치scaras e Valida칞칚o)
// =======================================================

/**
 * Aplica a m치scara de CPF (000.000.000-00).
 */
function maskCPF(value) {
    value = value.replace(/\D/g, ""); // Remove tudo que n칚o for d칤gito
    value = value.replace(/(\d{3})(\d)/, "$1.$2");
    value = value.replace(/(\d{3})(\d)/, "$1.$2");
    value = value.replace(/(\d{3})(\d{1,2})$/, "$1-$2");
    return value;
}

/**
 * Aplica a m치scara de Telefone ((XX) XXXXX-XXXX).
 */
function maskTelefone(value) {
    value = value.replace(/\D/g, ""); // Remove tudo que n칚o for d칤gito
    value = value.replace(/^(\d{2})(\d)/g, "($1) $2");
    value = value.replace(/(\d)(\d{4})$/, "$1-$2");
    return value;
}

/**
 * Aplica a m치scara de CEP (00000-000).
 */
function maskCEP(value) {
    value = value.replace(/\D/g, ""); // Remove tudo que n칚o for d칤gito
    value = value.replace(/(\d{5})(\d)/, "$1-$2");
    return value;
}

/**
 * Fun칞칚o simples para verificar se um CPF est치 em um formato v치lido.
 */
function validateCPF(cpf) {
    // Verifica se tem 14 caracteres (formato com pontos e h칤fen)
    return cpf.length === 14;
}

// =======================================================
// 4. L칩gica de Valida칞칚o e Submiss칚o do Formul치rio
// =======================================================

/**
 * Valida o formul치rio antes da submiss칚o e aplica feedback visual.
 * @param {Event} event - O evento de submiss칚o do formul치rio.
 */
function handleFormSubmission(event) {
    event.preventDefault(); // Impede a submiss칚o padr칚o do formul치rio (que recarregaria a p치gina)

    const form = event.target;
    const formGroups = form.querySelectorAll('.form-group');
    let isValid = true;
    let nomeCompleto = ''; // Vari치vel para o template

    // Limpa estados de erro anteriores
    formGroups.forEach(group => {
        group.classList.remove('error');
    });

    // 1. Itera sobre os campos obrigat칩rios
    formGroups.forEach(group => {
        const input = group.querySelector('.form-input, .form-select');

        if (input && input.required && !input.value.trim()) {
            // Campo vazio
            group.classList.add('error');
            isValid = false;
        }

        if (input && input.id === 'campo_nome') {
            nomeCompleto = input.value.trim();
        }

        // Valida칞칚o espec칤fica do CPF
        if (input && input.id === 'campo_cpf' && !validateCPF(input.value)) {
            group.classList.add('error');
            isValid = false;
        }
    });

    // 2. Se for v치lido, simula o envio e usa o sistema de template
    if (isValid) {
        // Simula칞칚o de envio para o servidor
        console.log('Formul치rio enviado com sucesso!', new FormData(form));

        // Encontra o container do formul치rio para exibir o feedback
        const formContainer = document.querySelector('.form-cadastro-layout');
        if (formContainer) {
            // Usa o template JavaScript para exibir a mensagem de sucesso
            formContainer.innerHTML = templateFeedbackSucesso(nomeCompleto);
        }

       
        saveRegistrationToLocalStorage(new FormData(form));
    } else {
        alert('Por favor, preencha todos os campos obrigat칩rios e corrija os erros de formato.');
        
    }
}

// =======================================================
// 5. Integra칞칚o com Armazenamento Local (localStorage)
// =======================================================

/**
 * Salva os dados de um cadastro no localStorage.
 * @param {FormData} formData - Dados do formul치rio.
 */
function saveRegistrationToLocalStorage(formData) {
    const data = Object.fromEntries(formData.entries());
    let registrations = localStorage.getItem('patasAmigasRegistrations');

    if (registrations) {
        registrations = JSON.parse(registrations);
    } else {
        registrations = [];
    }

    registrations.push(data);
    localStorage.setItem('patasAmigasRegistrations', JSON.stringify(registrations));
    console.log('Dados salvos no Local Storage!');
}

// =======================================================
// 6. Manipula칞칚o do DOM e L칩gica de SPA
// =======================================================

/**
 * Fun칞칚o de navega칞칚o para o SPA B치sico.
 * Carrega o conte칰do da p치gina sem recarregar o navegador.
 */
async function loadContent(path) {
    const contentArea = document.querySelector('main .wrapper');

    // 1. Limpa o path: remove a barra inicial (/) se existir.
    const cleanPath = path.replace(/^\//, '');

    // 2. Determina a Rota
    const route = routes[cleanPath] || routes[''] || 'index.html';

    // Garante que o container existe
    if (!contentArea) {
        console.error('Container de conte칰do (main .wrapper) n칚o encontrado.');
        return; 
    }

    try {
        // O fetch busca o arquivo HTML da rota
        const response = await fetch(route);
        
        if (!response.ok) {
            throw new Error(`Erro ao carregar a p치gina: ${route}. Status: ${response.status}`);
        }

        const html = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        
        // Pega apenas o conte칰do que est치 dentro do 'main .wrapper' da nova p치gina
        const newMainContent = doc.querySelector('main .wrapper');
        
        if (newMainContent) {
            contentArea.innerHTML = newMainContent.innerHTML;
            
            // Re-bind (re-ativa) todos os EventListeners, especialmente o formul치rio e as m치scaras!
            bindEvents(); 
            
            // Atualiza a URL no navegador
            window.history.pushState({ path: cleanPath }, '', cleanPath);

        } else {
            throw new Error("N칚o foi poss칤vel encontrar o conte칰do principal (main .wrapper) na nova p치gina.");
        }

    } catch (error) {
        console.error('Falha no carregamento do SPA:', error);
        contentArea.innerHTML = `<p class="alert-error">Erro ao carregar conte칰do. (${route})</p>`;
    }
}

/**
 * Fun칞칚o para configurar todos os EventListeners
 */
function bindEvents() {
    // --- L칩gica de SPA e Navega칞칚o ---
    document.querySelectorAll('nav a').forEach(link => {
        if (!link.classList.contains('no-spa')) { 
             link.addEventListener('click', (e) => {
                // Previne o comportamento padr칚o (navega칞칚o)
                e.preventDefault(); 
                // Obt칠m o caminho do arquivo (ex: index.html)
                const path = e.target.getAttribute('href'); 
                // Navega para a nova rota e mant칠m apenas o caminho
               loadContent(path); 
                // Fecha o menu hamburger se estiver aberto
                document.querySelector('nav').classList.remove('open');
            });
        }
    });

    // --- L칩gica de Formul치rio (Cadastro) ---
    const form = document.querySelector('.form-container form');
    if (form) {
        // Ouvinte de submiss칚o
        form.addEventListener('submit', handleFormSubmission);
        
        // Ouvintes de M치scaras
        document.getElementById('campo_cpf')?.addEventListener('input', (e) => {
            e.target.value = maskCPF(e.target.value);
        });
        document.getElementById('campo_telefone')?.addEventListener('input', (e) => {
            e.target.value = maskTelefone(e.target.value);
        });
        document.getElementById('campo_cep')?.addEventListener('input', (e) => {
            e.target.value = maskCEP(e.target.value);
        });
    }
}

// =======================================================
// 7. Inicializa칞칚o da Aplica칞칚o
// =======================================================

// A fun칞칚o toggleMenu (hamb칰rguer) 칠 mantida no HTML para compatibilidade direta,
// mas seria movida para c치 em um projeto 100% JS.

document.addEventListener('DOMContentLoaded', () => {
    // Configura os eventos iniciais
    bindEvents();
    
    // Configura o bot칚o de 'Voltar' do navegador para o SPA
    window.onpopstate = () => {
        loadContent(window.location.pathname);
    };
});